# pip install aiofiles

import datetime
import uuid
import os
from sqlite3.dbapi2 import Cursor

from vkbottle.tools.dev_tools import keyboard
from PPTX_GENERATOR import PPTX_GENERATOR 
import sqlite3

import logging
from vkbottle.bot import Bot, Message
from vkbottle.tools import DocMessagesUploader
from settings import TOKEN

from morphy_using import name_change

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)

keyboard = '{"buttons":[[{"action":{"type":"text","label":"–•–æ—á—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç","payload":""},"color":"positive"}]]}'
empty_keyboard = '{"buttons":[]}'
mess = {}  #–¢—É—Ç –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –±–æ—Ç—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# —Ç–∞–∫ –¥–µ–ª–∞—Ç—å –ø–ª–æ—Ö–æ –∏ –ª—É—á—à–µ –ë–î –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –Ω–æ —Å–µ–π—á–∞—Å –ø–æ–π–¥—ë—Ç

@bot.on.message(text="–ù–∞—á–∞—Ç—å")
async def hi_handler(message: Message):
    users_info = await bot.api.users.get(message.from_id)
    S = "–ü—Ä–∏–≤–µ—Ç, " + users_info[0].first_name
    S += "\nüëãüèºüòÄ\n–Ø –ö–≤–∞–Ω—Ç–æ—à–∞, –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –æ –ø–æ—Å–µ—â–µ–Ω–∏–∏ –¥–Ω—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π\
        \n–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ—ë –∏–º—è –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ —Ç–≤–æ–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
    
    await message.answer(S, keyboard=keyboard)

@bot.on.message(text="–•–æ—á—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç")
async def what_is_name(message: Message):
    await message.answer("–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ–∏ –§–ò–û", keyboard=empty_keyboard)

@bot.on.message()
async def certificate(message: Message):
    global mess  # –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –±–æ—Ç—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å–ª–æ–≤–∞—Ä—å)
    users_info = await bot.api.users.get(message.from_id)
    #  "–≥–µ–Ω–∏–π–∞–ª—å–Ω—ã–π" –∞–Ω—Ç–∏ DDoS
    can_receive_message = 1
    if users_info[0].id not in mess: #–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–∏—Å–∞–ª –µ—â—ë —Å–æ–æ–±—â–µ–Ω–∏—è, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ ID –≤ —Å–ª–æ–≤–∞—Ä—å –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –≤—Ä–µ–º—è
        mess[users_info[0].id] = datetime.datetime.now()
    elif (datetime.datetime.now() - mess[users_info[0].id]).total_seconds() < 15:  # –°—Ç–∞–≤–∏–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç—É
        await message.answer('–ú–Ω–µ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –Ω–µ —á–∞—â–µ —á–µ–º —Ä–∞–∑ –≤ 15 —Å–µ–∫—É–Ω–¥\n‡≤•_‡≤•\n–¢–µ–±–µ –ø—Ä–∏–¥—ë—Ç—Å—è –ø–æ–¥–æ–∂–¥–∞—Ç—å')
        can_receive_message = 0
    if can_receive_message:
        await message.answer("–¢–≤–æ–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞—ë—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ", keyboard=keyboard)
        now = str(datetime.date.today().day)
        now += "-" + str(datetime.date.today().month)
        now += "-" + str(datetime.date.today().year)
        UID = uuid.uuid4().hex #—É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
        user_name = name_change(message.text)
        file = PPTX_GENERATOR(user_name, UID, now)
        #print("GENERATOR OK")
        file = file.replace(" ", "¬©")
        command = "python PPTX_to_PDF.py " + file + " " + now
        res = os.system(command)  # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        file = file.replace("¬©", " ")
        #print("PDF OK")
        doc = await DocMessagesUploader(bot.api).upload(
            file + ".pdf", './GENERATED_PDF/' + now + '/' + file + ".pdf", peer_id=message.peer_id
        )
        await message.answer(attachment=doc, reply_to=message.id)

        connect = sqlite3.connect('users.db')
        cursor = connect.cursor()
        cursor.execute("""CREATE TABLE IF NOT EXISTS users(
                user_id TEXT PRIMARY KEY,
                user_name TEXT,
                date TEXT,
                time TEXT,
                source TEXT,
                uname_source TEXT,
                uid_source TEXT
                )
                """)	
        now_time = datetime.datetime.now()
        users_list = [UID, message.text, now, now_time.strftime("%H:%M:%S"), "VK", users_info[0].first_name + " " + users_info[0].last_name, users_info[0].id]
        cursor.execute("INSERT INTO users VALUES(?,?,?,?,?,?,?);", users_list)
        connect.commit()

bot.run_forever()


